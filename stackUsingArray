#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>

#define SIZE 5

typedef struct
{
    int stack[SIZE];
    int top;
} Stack;

void initStack(Stack *stackPtr)
{
    stackPtr->top = -1;
}

void push(Stack *stackPtr)
{
    int data;
    printf("Enter data for push: ");
    scanf("%d", &data);
    if (stackPtr->top == SIZE - 1)
    {
        printf("Stack Overflow\n");
    }
    else
    {
        stackPtr->top++;
        stackPtr->stack[stackPtr->top] = data;
    }
}

void pop(Stack *stackPtr)
{
    if (stackPtr->top == -1)
    {
        printf("Stack Underflow\n");
    }
    else
    {
        int item = stackPtr->stack[stackPtr->top];
        stackPtr->top--;
        printf("Popped element is %d\n", item);
    }
}

void peek(Stack *stackPtr)
{
    if (stackPtr->top == -1)
    {
        printf("Stack is empty\n");
    }
    else
    {
        printf("Top element is %d\n", stackPtr->stack[stackPtr->top]);
    }
}

bool isEmpty(Stack *stackPtr)
{
    if (stackPtr->top == -1)
    {
        return true;
    }
    return false;
}

void findSize(Stack *stackPtr)
{
    if (stackPtr->top == -1)
    {
        printf("Stack is empty\n");
    }
    else
    {
        printf("Size of stack is %d\n", stackPtr->top + 1);
    }
}

int main()
{
    Stack myStack;
    bool empty;
    initStack(&myStack);
    printf("1. Push element onto stack\n");
    printf("2. Pop an element from stack\n");
    printf("3. Find top element of stack\n");
    printf("4. Check if stack is empty\n");
    printf("5. Find size of stack\n");
    printf("0. Exit\n");
    int choice;
    do
    {

        printf("Enter your choice: ");
        scanf("%d", &choice);
        switch (choice)
        {
        case 1:
            push(&myStack);
            break;
        case 2:
            pop(&myStack);
            break;
        case 3:
            peek(&myStack);
            break;
        case 4:
            empty = isEmpty(&myStack);
            if (empty)
            {
                printf("Stack is empty\n");
            }
            else
            {
                printf("Stack is not empty\n");
            }
            break;
        case 5:
            findSize(&myStack);
            break;
        case 0:
            printf("Exiting...\n");
            break;
        default:
            printf("Enter a valid choice\n");
            break;
        }
    } while (choice != 0);

    return 0;
}

